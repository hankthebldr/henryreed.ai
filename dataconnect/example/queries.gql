# Example queries for Cortex DC Portal

# @auth() directives control who can call each operation.
# Anyone should be able to list all POVs, so the auth level is set to PUBLIC
query ListPOVs @auth(level: PUBLIC, insecureReason: "Anyone can list all POVs.") {
  povs {
    id
    name
    customer
    industry
    status
  }
}

# List all users, only admins should be able to list all users, so we use NO_ACCESS
query ListUsers @auth(level: NO_ACCESS) {
  users {
    id
    email
    displayName
  }
}

# Logged in users can list all their POVs
# Since the query uses the uid of the current authenticated user, we set auth level to USER
query ListUserPOVs @auth(level: USER) {
  user(key: { id_expr: "auth.uid" }) {
    id
    email
    displayName
    # List POVs created by this user
    createdPOVs: povs_on_createdBy {
      id
      name
      customer
      status
      priority
      startDate
      endDate
    }
  }
}

# Get POV by id
query GetPOVById($id: UUID!) @auth(level: PUBLIC, insecureReason: "Anyone can get a POV by id.") {
  pov(id: $id) {
    id
    name
    customer
    industry
    useCase
    status
    priority
    startDate
    endDate
    estimatedTimeline
    budget
    createdBy {
      id
      email
      displayName
    }
    assignedTo {
      id
      email
      displayName
    }
    createdAt
    updatedAt
    tags
    notes
  }
}

# Search for POVs
query SearchPOVs($nameInput: String, $customer: String) @auth(level: PUBLIC, insecureReason: "Anyone can search for POVs.") {
  povs(
    where: {
      _and: [{ customer: { eq: $customer } }, { name: { contains: $nameInput } }]
    }
  ) {
    id
    name
    customer
    status
    priority
  }
}
