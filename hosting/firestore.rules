rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false; // Default deny all
    }

    match /posts/{postId} {
      allow read: if request.auth.uid != null && resource.data.status == 'published';
      allow create: if request.auth.uid != null && request.auth.token.role in ['admin', 'author'];
      allow update, delete: if request.auth.uid != null && request.auth.token.role == 'admin';
    }

    match /categories/{categoryId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if request.auth.uid != null && request.auth.token.role == 'admin';
    }

    match /tags/{tagId} {
      allow read: if request.auth.uid != null;
      allow create, update, delete: if request.auth.uid != null && request.auth.token.role == 'admin';
    }

    match /comments/{commentId} {
      allow read: if request.auth.uid != null && resource.data.status == 'approved';
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid != null && request.auth.token.role == 'admin';
    }

    match /userProfiles/{userId} {
      allow read: if request.auth.uid == userId || request.auth.token.role == 'admin';
      allow update: if request.auth.uid == userId;
      allow create, delete: if request.auth.token.role == 'admin';
    }
  }
}
